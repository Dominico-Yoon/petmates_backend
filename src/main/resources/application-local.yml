spring:
  datasource:
    ## MySQL 데이터베이스 설정 (utf8mb4_unicode_ci 콜레이션 사용)
    ### @SEE: https://chung-develop.tistory.com/143
    #    url: ${DATABASE_URL}?allowPublicKeyRetrieval=true&useSSL=false
    url: jdbc:mysql://localhost:3306/petmates?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia\Seoul&useLegacyDatetimeCode=false&characterEncoding=UTF-8&useUnicode=true&connectionCollation=utf8mb4_unicode_ci
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: petuser
    password: qhdks00!
  jpa:
    hibernate:
      ddl-auto: update
    ## 로그 설정
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        ## 추가적인 주석 출력
        use_sql_comments: true
      default_batch_fetch_size: 100
    open-in-view: false
# Test case 작성 후, Spring boot 3.1부터 지원되는 도커 지원 중에 MySQL 도커를 사용해서
# Test case를 실행하면 MySQL 접속이 안됨.
# Replace.NONE 옵션을 켠 채 @DataJpaTest 와 함께 쓰면 실제 DB 를 이용할 수 있다.
# 아래는 '@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)'을 대체하기 위해서 사용함.
#  test:
#    database:
#      replace: none
  ## SQL 초기화 스크립트 설정
  sql:
    init:
      mode: always
      platform: mysql
      schema-locations: classpath:schema-local.sql
  ## file upload
  servlet:
    multipart:
      location: /home/web/app/petmates/upload
  docker:
    compose:
      enabled: true
#      skip:
#        in-tests: false
      profiles:
        active: local
      file: docker–compose-local.yaml
  ## thymeleaf
  ### cache off
  thymeleaf:
    cache: false

## logging setting
logging:
  level:
    '[com.example.kakao]': INFO
    '[org.hibernate.type]': TRACE
    #    '[org.springframework.security.web]': off
    org.hibernate.orm.jdbc.bind: trace
    ### 쿼리 '?'부분 치환해서 보기
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

  ## JWT Secret Key
jwt:
  header: Authorization
  secret: tUkrml53kXvL0/H1wRZaeMnRN7BMx1TIfw3+dfC1MB1SJi0XfwN/DIsZzknYXOppgQsORkElJiueBPYKI71P4g==
  ### ttl (초)
  token-validity-in-seconds: 86400
